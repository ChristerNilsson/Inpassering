// Generated by CoffeeScript 1.11.1
var Button, DayButton, Deltagare, PersonButton, RoomButton, buttons, colors, deltagare, draw, mousePressed, persons, rooms, setup, state,
  extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
  hasProp = {}.hasOwnProperty;

buttons = [];

rooms = ['Scratch 1', 'Scratch 2', 'Python 1', 'Python 2', 'Matematik och spelprogrammering', '3D-grafik och modellering i Maya', 'Eget projekt'];

colors = [];

deltagare = {};

persons = [];

state = 0;

Deltagare = (function() {
  function Deltagare(namn1, rum, dag) {
    this.namn = namn1;
    this.rum = rum;
    this.dag = dag;
    this.present = false;
  }

  return Deltagare;

})();

Button = (function() {
  function Button() {}

  Button.prototype.pressed = function(x, y) {
    x = x + this.w / 2;
    y = y + this.h / 2;
    return (this.x < x && x < this.x + this.w) && (this.y < y && y < this.y + this.h);
  };

  return Button;

})();

PersonButton = (function(superClass) {
  extend(PersonButton, superClass);

  function PersonButton(text1, x1, y1, w, h, col1, present) {
    this.text = text1;
    this.x = x1;
    this.y = y1;
    this.w = w;
    this.h = h;
    this.col = col1;
    this.present = present;
  }

  PersonButton.prototype.draw = function() {
    if (this.present) {
      stroke(colors[this.col][0]);
      strokeWeight(3);
    } else {
      noStroke();
      strokeWeight(1);
    }
    fill(colors[this.col][1]);
    rect(this.x, this.y, this.w, this.h);
    fill(colors[this.col][0]);
    noStroke();
    textAlign(LEFT, CENTER);
    return text(this.text, 5 + this.x - this.w / 2, this.y);
  };

  return PersonButton;

})(Button);

RoomButton = (function(superClass) {
  extend(RoomButton, superClass);

  function RoomButton(text1, x1, y1, w, h, col1) {
    this.text = text1;
    this.x = x1;
    this.y = y1;
    this.w = w;
    this.h = h;
    this.col = col1;
    this.a = 0;
    this.b = 0;
  }

  RoomButton.prototype.draw = function() {
    noStroke();
    strokeWeight(1);
    fill(colors[this.col][1]);
    rect(this.x, this.y, this.w, this.h);
    fill(colors[this.col][0]);
    noStroke();
    textAlign(LEFT, CENTER);
    text(this.text, 5 + this.x - this.w / 2, this.y);
    textAlign(RIGHT, CENTER);
    return text(this.a + " av " + this.b, -5 + this.x + this.w / 2, this.y);
  };

  return RoomButton;

})(Button);

DayButton = (function(superClass) {
  extend(DayButton, superClass);

  function DayButton(text1, x1, y1, w, h) {
    this.text = text1;
    this.x = x1;
    this.y = y1;
    this.w = w;
    this.h = h;
  }

  DayButton.prototype.draw = function() {
    fill(color(255));
    rect(this.x, this.y, this.w, this.h);
    fill(color(0));
    textAlign(CENTER, CENTER);
    return text(this.text, this.x, this.y);
  };

  return DayButton;

})(Button);

setup = function() {
  var button, i, j, k, l, len, len1, len2, name, ref, ref1, results, room;
  createCanvas(630, 660);
  rooms = _.sortBy(rooms);
  noStroke();
  rectMode(CENTER);
  textSize(14);
  textAlign(CENTER, CENTER);
  colors.push([color(255), color(0)]);
  colors.push([color(0), color(255)]);
  colors.push([color(255), color(255, 0, 0)]);
  colors.push([color(0), color(0, 255, 0)]);
  colors.push([color(255), color(0, 0, 255)]);
  colors.push([color(0), color(255, 255, 0)]);
  colors.push([color(255), color(255, 0, 255)]);
  colors.push([color(0), color(0, 255, 255)]);
  colors.push([color(0), color(192)]);
  colors.push([color(255), color(64)]);
  ref = range(31);
  for (j = 0, len = ref.length; j < len; j++) {
    i = ref[j];
    buttons.push(new DayButton(i + 1, 30 + 60 * (i % 3), 30 + 60 * (int(i / 3)), 50, 50));
  }
  for (i = k = 0, len1 = rooms.length; k < len1; i = ++k) {
    room = rooms[i];
    buttons.push(new RoomButton(room, 350, 30 + 60 * i, 300, 50, i));
  }
  ref1 = _.sortBy(namn.split('\n'));
  results = [];
  for (l = 0, len2 = ref1.length; l < len2; l++) {
    name = ref1[l];
    room = _.sample(rooms);
    deltagare[name] = new Deltagare(name, room, _.random(1, 31));
    results.push((function() {
      var len3, m, results1;
      results1 = [];
      for (m = 0, len3 = buttons.length; m < len3; m++) {
        button = buttons[m];
        if (button.text === room) {
          results1.push(button.b += 1);
        } else {
          results1.push(void 0);
        }
      }
      return results1;
    })());
  }
  return results;
};

draw = function() {
  var button, j, k, len, len1, person, results, results1;
  background(128);
  if (state === 0) {
    results = [];
    for (j = 0, len = buttons.length; j < len; j++) {
      button = buttons[j];
      results.push(button.draw());
    }
    return results;
  } else {
    results1 = [];
    for (k = 0, len1 = persons.length; k < len1; k++) {
      person = persons[k];
      results1.push(person.draw());
    }
    return results1;
  }
};

mousePressed = function() {
  var button, col, delt, filter, i, j, k, key, len, len1, namn, person, results, results1;
  if (state === 0) {
    results = [];
    for (j = 0, len = buttons.length; j < len; j++) {
      button = buttons[j];
      if (button.pressed(mouseX, mouseY)) {
        state = 1;
        filter = button.text;
        persons = [];
        results.push((function() {
          var results1;
          results1 = [];
          for (key in deltagare) {
            delt = deltagare[key];
            if (delt.rum === filter || delt.dag === filter) {
              i = persons.length;
              col = rooms.indexOf(delt.rum);
              button = new PersonButton(delt.namn, 80 + 155 * (i % 4), 30 + 60 * int(i / 4), 150, 50, col, delt.present);
              results1.push(persons.push(button));
            } else {
              results1.push(void 0);
            }
          }
          return results1;
        })());
      } else {
        results.push(void 0);
      }
    }
    return results;
  } else {
    state = 0;
    results1 = [];
    for (k = 0, len1 = persons.length; k < len1; k++) {
      person = persons[k];
      if (person.pressed(mouseX, mouseY)) {
        namn = person.text;
        delt = deltagare[namn];
        delt.present = !delt.present;
        results1.push((function() {
          var l, len2, results2;
          results2 = [];
          for (l = 0, len2 = buttons.length; l < len2; l++) {
            button = buttons[l];
            if (delt.rum === button.text) {
              if (delt.present) {
                results2.push(button.a += 1);
              } else {
                results2.push(button.a -= 1);
              }
            } else {
              results2.push(void 0);
            }
          }
          return results2;
        })());
      } else {
        results1.push(void 0);
      }
    }
    return results1;
  }
};

//# sourceMappingURL=data:application/json;base64,
//# sourceURL=C:\github\Inpassering\sketch.coffee